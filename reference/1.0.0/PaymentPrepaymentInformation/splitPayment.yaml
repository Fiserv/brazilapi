openapi: 3.0.1
info:
  title: Split Payment
  description: "Api to manage split resources as rules, fees, sellers."
  termsOfService: urn:tos
  contact:
    name: Fiserv
    url: https://merchants.fiserv.com/pt-br/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: 1.0.8
x-header-api-key: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
x-config:
  tryItOut: true
x-header-api-secret: N93nmFmoY0NzSMC5
x-production-url: https://prod.api.firstdata.com/bwa
servers:
- url: https://cat.api.firstdata.com/bwa
security:
- JWT: []
tags:
- name: Masters
  description: Resource for merchant master of a split service.
- name: Sellers
  description: Resource for merchant seller associated with a master user.
- name: Rules
  description: Resource for split rules. Register list and manage the spit payment
    rules between a master user and his sellers.
- name: RuleTypes
  description: Resource to manage rule types.
- name: Optin
  description: Resource to manage the user service agreement.
- name: IsAlive
  description: Endpoint to check if the api is up and running.
- name: Fees
  description: Resource for split fees. Allows the master use to manage extra fees
    to its sellers.
- name: Transactions
  description: Transactions list and summary for master merchant of all its sellers.
paths:
  /split-payment-api/v1/transactions:
    post:
      tags:
      - Transactions
      x-proxy-name: Transactions
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: List all transactions.
      operationId: listTransactions
      parameters:
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionsFilterRest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPaginadoTO'
  /split-payment-api/v1/transactions/summary:
    post:
      tags:
      - Transactions
      x-proxy-name: Transactions Summarized
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Transactions Summary.
      operationId: getTransactionsSummary
      parameters:
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionsFilterRest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MasterTransactionSummary'
  /split-payment-api/v1/sellers:
    get:
      tags:
      - Sellers
      x-proxy-name: Sellers
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Returns the list of sellers associated with a master merchant.
      operationId: getSellersByMastersIds
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 25
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: cpfCnpj
        in: query
        required: false
        schema:
          type: string
      - name: status
        in: query
        required: false
        schema:
          type: string
          enum:
          - ACTIVE
          - BLOCKED
          - BOARDING_PENDING
          - DELETED
      - name: masterIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: createdAt
        in: query
        description: Data de criação
        required: false
        schema:
          type: string
          format: date
        example: 2021-10-20
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerPage'
    post:
      tags:
      - Sellers
      x-proxy-name: Register a merchant seller for a master merchant
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Register a merchant seller for a master merchant.
      operationId: createSeller
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerRequestModel'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
                - $ref: '#/components/schemas/Conflict'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerRest'
  /split-payment-api/v1/sellers/{sellerId}/update:
    post:
      tags:
      - Sellers
      x-proxy-name: Update seller's data
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Update seller's data.
      operationId: updateSeller
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: sellerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerUpdateRequestModel'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
                - $ref: '#/components/schemas/Conflict'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerRest'
  /split-payment-api/v1/rules:
    get:
      tags:
      - Rules
      x-proxy-name: List the rules created by the master for its sellers
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: List the rules created by the master for its sellers.
      operationId: listRules
      parameters:
      - name: masterIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 25
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulePage'
    post:
      tags:
      - Rules
      x-proxy-name: Create a split rule for a specific seller or for all the sellers
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Create a split rule for a specific seller or for all the sellers
        of a master user.
      operationId: createRule
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        description: Details of the Item to be created
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/SellerFixedAmountRuleRequest'
              - $ref: '#/components/schemas/MasterPercentRuleRequest'
              - $ref: '#/components/schemas/RuleRequestModel'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "201":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleRest'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
  /split-payment-api/v1/rules/{ruleId}/update:
    post:
      tags:
      - Rules
      x-proxy-name: Update rule's data
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Update rule's data.
      operationId: updateRule
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleUpdateRequestModel'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
                - $ref: '#/components/schemas/Conflict'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleRest'
  /split-payment-api/v1/ruleTypes:
    get:
      tags:
      - RuleTypes
      x-proxy-name: List the available rule types
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: List the available rule types.
      operationId: list
      parameters:
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleTypeRest'
    post:
      tags:
      - RuleTypes
      x-proxy-name: Create a new type of rule to be used in split manager
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Create a new type of rule to be used in split manager
      operationId: createRuleType
      parameters:
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleTypeRest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleTypeRest'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
  /split-payment-api/v1/optin:
    get:
      tags:
      - Optin
      x-proxy-name: List the registered optins
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: List the registered optins.
      operationId: listOptin
      parameters:
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/InternalServerError'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptinRest'
    post:
      tags:
      - Optin
      x-proxy-name: Register the optin for a user
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Register the optin for a user. It will only be able to use the
        service after the optin is registered.
      operationId: createOptin
      parameters:
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptinRequestModel'
        required: true
      responses:
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/OptinRest'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
  /split-payment-api/v1/masters:
    post:
      tags:
      - Masters
      x-proxy-name: Create (register) a master user in the split plataform
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Create (register) a master user in the split plataform
      operationId: createMaster
      parameters:
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterRequestModel'
        required: true
      responses:
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterRest'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
  /split-payment-api/v1/fees:
    get:
      tags:
      - Fees
      x-proxy-name: List the fees registered by the master for its sellers
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: List the fees registered by the master for its sellers
      operationId: listFees
      parameters:
      - name: masterIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 25
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeePage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
    post:
      tags:
      - Fees
      x-proxy-name: Create a extra fee to a specific or for all the sellers of a master user
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Create a extra fee to a specific or for all the sellers of a master
        user.
      operationId: createFee
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeRequestModel'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        "201":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeRest'
  /split-payment-api/v1/fees/{feeId}/update:
    post:
      tags:
      - Fees
      x-proxy-name: Update a fee
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Update a fee.
      operationId: updateFee
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: feeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeRequestUpdateModel'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeRest'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
                - $ref: '#/components/schemas/Conflict'
  /split-payment-api/v1/sellers/{sellerId}:
    get:
      tags:
      - Sellers
      x-proxy-name: Returns a single seller associated with a master merchant
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Returns a single seller associated with a master merchant.
      operationId: getSellerById
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: sellerId
        in: path
        description: Id of the seller you want to retrieve.
        required: true
        schema:
          type: integer
          format: int64
        example: 38385774
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerRest'
  /split-payment-api/v1/sellers/{sellerId}/delete:
    get:
      tags:
      - Sellers
      x-proxy-name: Deactivate a user seller
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Deactivate a user seller.
      operationId: deleteSeller
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: sellerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "200":
          description: Successfully Done
  /split-payment-api/v1/sellers/{sellerEc}/transactions:
    get:
      tags:
      - Sellers
      x-proxy-name: List sellers transactions
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: "List sellers transactions. Accepts date range filter. If none\
        \ start or end date is provided, the default search is the lastest 7 days."
      operationId: listSellerTransactions
      parameters:
      - name: user-id
        in: header
        description: EC code of the master merchant
        required: true
        schema:
          type: string
        example: 39832063
      - name: sellerEc
        in: path
        description: Ec code of the seller which you want to retrieve the transactions.
        required: true
        schema:
          type: string
        example: 38385774
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 25
      - name: startDate
        in: query
        description: The start date you want to retrieve transactions.
        required: false
        schema:
          type: string
          format: date
        example: 2021-09-01
      - name: endDate
        in: query
        description: The end date you want to retrieve transactions.
        required: false
        schema:
          type: string
          format: date
        example: 2021-09-20
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerTransactionPage'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
  /split-payment-api/v1/sellers/{sellerEc}/transactions/summary:
    get:
      tags:
      - Sellers
      x-proxy-name: Returns a summary of sellers transactions
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: "Returns a summary of sellers transactions. Accepts date range\
        \ filter. If none start or end date is provided, the default search is the\
        \ lastest 7 days."
      operationId: summarySellerTransactions
      parameters:
      - name: user-id
        in: header
        description: EC code of the master merchant
        required: true
        schema:
          type: string
        example: 39832063
      - name: sellerEc
        in: path
        description: Ec code of the seller which you want to retrieve the transactions.
        required: true
        schema:
          type: string
        example: 38385774
      - name: startDate
        in: query
        description: The start date you want to retrieve transactions.
        required: true
        schema:
          type: string
          format: date
        example: 2021-09-01
      - name: endDate
        in: query
        description: The end date you want to retrieve transactions.
        required: true
        schema:
          type: string
          format: date
        example: 2021-09-20
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerTransactionRest'
  /split-payment-api/v1/rules/{ruleId}:
    get:
      tags:
      - Rules
      x-proxy-name: Read a specific rule by id
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Read a specific rule by id.
      operationId: getRuleById
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleRest'
  /split-payment-api/v1/rules/{ruleId}/delete:
    get:
      tags:
      - Rules
      x-proxy-name: Delete a rule
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Delete a rule.
      operationId: deleteRule
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: ruleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
                - $ref: '#/components/schemas/Conflict'
        "200":
          description: Successfully Done
          content:
            application/json: {}
  /split-payment-api/v1/rules/sellers/{sellerEc}:
    get:
      tags:
      - Rules
      x-proxy-name: List the rules for a specific seller
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: List the rules for a specific seller.
      operationId: listRulesBySeller
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: sellerEc
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 25
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialContent'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulePage'
  /split-payment-api/v1/ruleTypes/{ruleTypeId}:
    get:
      tags:
      - RuleTypes
      x-proxy-name: Get a rule tyep for its id
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Get a rule tyep for its id
      operationId: getTerm
      parameters:
      - name: ruleTypeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleTypeRest'
  /split-payment-api/v1/optin/seller/{sellerEc}:
    get:
      tags:
      - Optin
      x-proxy-name: Get the optin for a specific seller
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Get the optin for a specific seller.
      operationId: getSellerOptin
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: sellerEc
        in: path
        description: EC code for seller merchant.
        required: true
        schema:
          type: string
        example: 91042567
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptinRest'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/InternalServerError'
  /split-payment-api/v1/optin/master:
    get:
      tags:
      - Optin
      x-proxy-name: Get the master user optin
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Get the master user optin
      operationId: getMasterOptin
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptinRest'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/InternalServerError'
  /split-payment-api/v1/masters/{cpfCnpj}/{institution}:
    get:
      tags:
      - Masters
      x-proxy-name: Get master by Document (CPF/CNPJ)
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Get master by Document (CPF/CNPJ)
      operationId: getMastersByCpfCnpj
      parameters:
      - name: cpfCnpj
        in: path
        required: true
        schema:
          type: string
      - name: institution
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 25
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterRest'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/InternalServerError'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
  /split-payment-api/v1/fees/{feeId}/delete:
    get:
      tags:
      - Fees
      x-proxy-name: Delete a fee
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Delete a fee.
      operationId: deleteFee
      parameters:
      - name: user-id
        in: header
        description: EC code for master merchant.
        required: true
        schema:
          type: string
        example: 91042312
      - name: feeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/PartialContent'
                - $ref: '#/components/schemas/Conflict'
        "200":
          description: Successfully Done
          content:
            application/json: {}
  /split-payment-api/isAlive:
    get:
      tags:
      - IsAlive
      x-proxy-name: Get API operation status
      x-group-name: Split Payment
      x-child-product-name: Payment & Prepayment Information
      description: Get API operation status
      operationId: isAlive
      parameters:
      - name: Message-Signature
        in: header
        description: HMAC
        required: true
        schema:
          type: string
        example: 1tsmkG9Ip3k2rcO5cETButfP3D/RS6U8troFF+mUrno=
      - name: Api-Key
        in: header
        description: APigee Key
        required: true
        schema:
          type: string
        example: X0GW3QGOYFn4r7DHcVC8KuatUnNs6MGB
      - name: auth
        in: header
        description: Oauth Key
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Date in format epoch
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: It must be randomly generated by client.
        schema:
          type: string
        example: 6NYHj9Pgyxc84rmafpwG4fjhLwFfJYFVmxJOcgziD0QN3q6mGC
      responses:
        "200":
          description: Successfully Done
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IsAlive'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    FiltroDataTO:
      required:
      - data_final
      - data_inicial
      type: object
      properties:
        data_inicial:
          type: string
          description: Initial date for the search. Maximum period allowed 90 days.
          format: date
          example: 2021-01-01
        data_final:
          type: string
          description: Final date for the search. Maximum period allowed 90 days.
          format: date
          example: 2021-01-30
    TransactionsFilterRest:
      required:
      - data
      type: object
      properties:
        master_ids:
          type: array
          description: Master's Merchant Id List
          example:
          - 12341
          - 12342
          items:
            type: string
            description: Master's Merchant Id List
            example: "[12341,12342]"
        data:
          $ref: '#/components/schemas/FiltroDataTO'
        rejected:
          type: boolean
          description: Filter for only rejected or successful transactions
          example: true
        param:
          type: string
          description: "Param to filter by name, transaction code, seller name or\
            \ seller document (cpf/cnpj)"
          example: Jadon S.
        numero_pagina:
          type: integer
          description: Page number. Can be set through request.
          format: int32
          example: 1
        tamanho_pagina:
          type: integer
          description: Items per page. Can be set through request.
          format: int32
          example: 5
        total_itens:
          type: integer
          description: "Total items queried, ignoring pagination."
          format: int32
          example: 10
        total_paginas:
          type: integer
          description: Total pages.
          format: int32
          example: 10
    InternalServerError:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 2
          enum:
          - 2
          - 7
        mensagem:
          type: string
          description: Description return code
          example: Erro Interno - (Meaning Internal Error)
          enum:
          - 2 - Erro Interno (Meaning Internal Error)
          - 7 - Erro na integracao da API. Detalhe (Meaning Integration Error)
    PartialContent:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 9
          enum:
          - 9
          - 10
        mensagem:
          type: string
          description: Description return code
          example: "Campos mandatorios: ... (meaning Mandatory Fields)"
          enum:
          - "9 - Campos mandatorios: ... (meaning Mandatory Fields)"
          - 10 - (Erro validaçao) (meaning VAlidation Error)
    SellerTransactionRest:
      type: object
      properties:
        id:
          type: integer
          description: "Consolidated transaction id. Can be the transaction_ptlf,\
            \ or transaction_rejected or transaction_split id."
          format: int64
          example: 1
        transactionId:
          type: integer
          description: Transaction Id
          format: int64
          example: 1
        transactionCode:
          type: string
          description: Transaction Universal identifier.
          example: "1"
        ec:
          type: string
          description: Seller Merchant Id.
          example: "1587"
        createdAt:
          type: string
          description: Creation Date of the transaction.
          format: date
          example: 2021-11-08
        nsu:
          type: string
          description: NSU number.
          example: "1"
        totalValue:
          type: number
          description: Transaction gross value.
          format: double
          example: 1500
        transferedValue:
          type: number
          description: Transaction amount transferred to the seller.
          format: double
          example: 500
        netValue:
          type: number
          description: Transaction net value.
          format: double
          example: 1000
        rejected:
          type: boolean
          description: If the transaction was rejected or successful.
          example: false
        seller:
          type: string
          description: Seller name.
          example: Van D. B.
        sellerCpfCnpj:
          type: string
          description: "Seller document, cpf/cnpj."
          example: "06988749407"
    TransactionPaginadoTO:
      type: object
      properties:
        numero_pagina:
          type: integer
          description: Page number. Can be set through request.
          format: int32
          example: 1
        total_itens:
          type: integer
          description: "Total items queried, ignoring pagination."
          format: int32
          example: 10
        total_paginas:
          type: integer
          description: Total pages.
          format: int32
          example: 10
        resultado:
          type: array
          items:
            $ref: '#/components/schemas/SellerTransactionRest'
    MasterTransactionSummary:
      type: object
      properties:
        totalSales:
          type: number
          description: Total in sales.
          example: 15000.0
        totalSalesTransactionsAmount:
          type: integer
          description: Total sales quantity.
          format: int64
          example: 210
        totalTransfer:
          type: number
          description: Total amount transferred to sellers in sales.
          example: 5000.0
        totalTransferTransactionsAmount:
          type: integer
          description: Total quantity of sales that had transferred values.
          format: int64
          example: 100
        netValue:
          type: number
          description: Total net value
          example: 10000.0
        netValueTransactionsAmount:
          type: integer
          description: Total quantity of sales.
          format: int64
          example: 210
        rejectedValue:
          type: number
          description: Total in rejected sales.
          example: 1500
        rejectedValueTransactionsAmount:
          type: integer
          description: Total quantity of rejected sales.
          format: int64
          example: 25
    SellerRequestModel:
      required:
      - cpfCnpj
      - ec
      - institution
      - name
      type: object
      properties:
        masterEc:
          type: string
          readOnly: true
        name:
          type: string
          description: Name of seller merchant
          example: Wise phone
        institution:
          type: string
          description: Bank institution number of seller merchant
          example: "0000003"
        ec:
          type: string
          description: Seller's merchant identifier.
          example: "89450257"
        cpfCnpj:
          type: string
          description: "CPF or CNPJ: national document of master user."
          example: "49104994000185"
        terminalId:
          type: string
          description: Seller terminal identification code.
          example: ISD0002A
    Conflict:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 8
          enum:
          - 8
        mensagem:
          type: string
          description: Description return code
          example: Item duplicado - (Meaning Duplicated Item)
          enum:
          - 8 - Item duplicado (Meaning Duplicated Item)
    SellerRest:
      required:
      - createdAt
      - updatedAt
      type: object
      properties:
        id:
          type: integer
          description: Seller Id.
          format: int64
          example: 1
        masterEc:
          type: string
          description: Master Merchant Id.
          example: "1587"
        name:
          type: string
          description: Seller name.
          example: David D. G.
        institution:
          type: string
          description: Institution name.
          example: Bin.
        ec:
          type: string
          description: Seller Merchant Id.
          example: "1587"
        cpfCnpj:
          type: string
          description: "Seller document, cpf/cnpj."
          example: "06988749407"
        terminalId:
          type: string
          description: Seller terminal Id.
          example: TERM019
        status:
          type: string
          enum:
          - ACTIVE
          - BLOCKED
          - BOARDING_PENDING
          - DELETED
        createdAt:
          type: string
          description: Seller creation date
          format: date
          example: 2021-11-01
        updatedAt:
          type: string
          description: Last time seller was updated
          format: date-time
    SellerUpdateRequestModel:
      type: object
      properties:
        ec:
          type: integer
          description: Seller's merchant identifier.
          format: int64
          example: 89450257
        name:
          type: string
          description: Name of seller merchant
          example: Wise phone
        cpfCnpj:
          type: string
          description: "CPF or CNPJ: national document of master user."
          example: "49104994000185"
        status:
          type: string
          description: Seller's status
          example: ACTIVE
          enum:
          - ACTIVE
          - BLOCKED
          - BOARDING_PENDING
          - DELETED
        terminalId:
          type: string
          description: Seller terminal identification code.
          example: ISD0002A
    NotFound:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 5
          enum:
          - 5
        mensagem:
          type: string
          description: Description return code
          example: Item nao encontrado - (Meaning item not found)
          enum:
          - 5 - Item nao encontrado (Meaning item not found)
    SellerFixedAmountRuleRequest:
      required:
      - fixedAmount
      - masterEc
      - name
      - ruleType
      - sellerEc
      type: object
      properties:
        masterEc:
          type: string
          description: Master user EC. This value will be get from the user-id header.
        sellerEc:
          type: string
          description: Seller user EC. Speficy the seller to apply the rule.
          example: "12389"
        ruleType:
          type: integer
          description: Rule type 1 = Fixed value.
          format: int64
          example: 1
        fixedAmount:
          type: number
          description: Value that will be send to the seller.
          format: float
          example: 20.5
        name:
          type: string
          description: Rule name
          example: Fixed value rule for Seller XYZ
    MasterPercentRuleRequest:
      required:
      - masterEc
      - name
      - percent
      - ruleType
      type: object
      properties:
        masterEc:
          type: string
          description: EC do usuário master. Deve vir no campo user-id do header
        ruleType:
          type: integer
          description: Tipo de regra 2 = Percentual
          format: int64
          example: 2
        percent:
          type: integer
          description: Valor inteiro do percentual
          format: int32
          example: 10
        name:
          type: string
          description: Nome da regra
          example: Regra default do Master
    RuleRequestModel:
      required:
      - masterEc
      - name
      - ruleType
      type: object
      properties:
        masterEc:
          type: string
          description: Master user EC. This value will be get from the user-id header.
        sellerEc:
          type: string
          description: Seller user EC. Speficy the seller to apply the rule. Do not
            send this value for master default rules.
        percent:
          type: integer
          description: "For rule type 2, send this field with the percent value that\
            \ will be split to the seller."
          format: int32
          example: 10
        fixedAmount:
          type: number
          description: "For rule type 1, send this field with the fixed value that\
            \ will be split to the seller. (R$ - BRL)"
          format: double
          example: 30.5
        ruleType:
          type: string
          description: "Rule type: \n F - Fixed value. \n P - Percent value. A - Values\
            \ will must be sent for the master user in the transaction."
          example: P
          enum:
          - P
          - A
          - F
          - F
          - P
          - A
        name:
          type: string
          description: Define a name for the rule that it's been created.
          example: Split rule by percent for seller XYZ
    RuleRest:
      type: object
      properties:
        id:
          type: integer
          description: Rule Id
          format: int64
          example: 1
        masterEc:
          type: string
          description: Master's Merchant Id
          example: "12341"
        sellerEc:
          type: string
          description: Seller's Merchant Id
          example: "12341"
        percent:
          type: integer
          description: Sale value percent to be transferred to the seller
          format: int32
          example: 15
        fixedAmount:
          type: number
          description: Sale value amount to be transferred to the seller
          format: double
          example: 1500.0
        ruleType:
          $ref: '#/components/schemas/RuleTypeRest'
        name:
          type: string
          description: Rule name
          example: Top Sales
        status:
          type: string
          enum:
          - ACTIVE
          - DELETED
        createdAt:
          type: string
          description: Rule date of creation
          format: date
          example: 2021-11-08
        updatedAt:
          type: string
          description: Last time the rule was updated.
          format: date-time
      description: Response Content.
      example: 1
    RuleTypeRest:
      required:
      - code
      - description
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
          example: Value per transaction (Fixed)
        code:
          type: string
          description: A code to identify the rule type.
    RuleUpdateRequestModel:
      type: object
      properties:
        percent:
          type: integer
          description: The percent value to be transferd in each transaction for a
            rule of percent type (2).
          format: int32
          example: 20
        fixedAmount:
          type: number
          description: The fixed (R$ - BRL) value to be transferd in each transaction
            for a fixedAmount type (1).
          format: double
          example: 20.71
        ruleType:
          type: string
          description: The type of rule you need to define.
          enum:
          - P
          - A
          - F
          - "P,F,A"
        name:
          type: string
          description: A name to describe your rule.
          example: My awesome rule.
    OptinRequestModel:
      required:
      - masterEc
      type: object
      properties:
        sellerEc:
          type: string
          description: Seller's merchant identifier. Only must be sent if is a seller
            optin.
          example: "91042312"
        masterEc:
          type: string
          description: Master's merchant identifier
          example: "91042312"
    OptinRest:
      required:
      - id
      - masterEc
      - sellerEc
      type: object
      properties:
        id:
          type: integer
          description: Optin Id.
          format: int64
          example: 15
        sellerEc:
          type: string
          description: Seller merchant Id.
          example: "712"
        masterEc:
          type: string
          description: Seller Master merchant Id.
          example: "1"
        createdAt:
          type: string
          description: Date of optin registration.
          format: date
          example: 2021-11-09
        updatedAt:
          type: string
          description: Last time the optin was updated.
          format: date-time
    MasterRequestModel:
      required:
      - cpfCnpj
      - institution
      - name
      - terminalId
      type: object
      properties:
        institution:
          type: string
          description: Bank institution number of master user
          example: "0000003"
        ec:
          minimum: 1
          type: integer
          description: Master's merchant identifier
          format: int64
          example: 91042312
        cpfCnpj:
          type: string
          description: "CPF or CNPJ: national document of master user."
          example: "98037982000190"
        terminalId:
          type: string
          description: Master terminal identification code.
          example: ISD0002A
        transactionReview:
          type: boolean
          description: Whether a user will or won't have to manually aprove transactions
            for his sellers
          example: true
        name:
          type: string
          description: The name of the Master MErchant
          example: My Shop
    MasterRest:
      required:
      - createdAt
      - updatedAt
      type: object
      properties:
        id:
          type: integer
          description: Master Id.
          format: int64
          example: 1
        institution:
          type: string
          description: Institution name.
          example: Bin.
        ec:
          type: string
          description: Master Merchant Id.
          example: "1587"
        cpfCnpj:
          type: string
          description: "Seller document, cpf/cnpj."
          example: "06988749407"
        terminalId:
          type: string
          description: Master terminal Id.
          example: TERM019
        transactionReview:
          type: boolean
          description: Transaction review status.
          example: false
        status:
          type: string
          enum:
          - ACTIVE
          - DELETED
        name:
          type: string
          description: Seller name.
          example: "Luke S,."
        createdAt:
          type: string
          description: Master creation date
          format: date
          example: 2021-11-01
        updatedAt:
          type: string
          description: Last time master was updated
          format: date-time
    FeeRequestModel:
      required:
      - chargeDay
      - masterEc
      - name
      - period
      - value
      type: object
      properties:
        name:
          type: string
        value:
          minimum: 1
          type: number
          format: float
        chargeDay:
          maximum: 28
          minimum: 1
          type: integer
          format: int32
        period:
          type: string
          enum:
          - MENSAL
          - BIMESTRAL
          - TRIMESTRAL
        masterEc:
          type: string
          description: Master user EC. This value will be get from the user-id header.
        sellerEc:
          type: string
          description: Seller user EC. Speficy the seller to apply the fee. Do not
            send this value for master default fee.
    FeeRest:
      type: object
      properties:
        id:
          type: integer
          description: Fee Id.
          format: int64
          example: 1
        masterEc:
          type: string
          description: Master Merchant Id.
          example: "1587"
        sellerEc:
          type: string
          description: Seller Merchant Id.
          example: "1587"
        name:
          type: string
          description: Fee name.
          example: Top Sales.
        period:
          type: string
          enum:
          - MENSAL
          - BIMESTRAL
          - TRIMESTRAL
        chargeDay:
          type: integer
          description: Day of the month to apply the fee.
          format: int32
        value:
          type: number
          description: Fee amount.
          format: float
          example: 876.9
        createdAt:
          type: string
          description: Fee date of creation
          format: date
          example: 2021-11-08
        updatedAt:
          type: string
          description: Last time the fee was updated.
          format: date-time
      description: Response Content.
      example: 1
    FeeRequestUpdateModel:
      type: object
      properties:
        name:
          type: string
          description: A name for fee identification.
        value:
          minimum: 1
          type: number
          description: Fee value.
          format: float
          example: 200.5
        chargeDay:
          maximum: 28
          minimum: 1
          type: integer
          description: Day in the month to apply the carge.
          format: int32
          example: 5
        period:
          type: string
          enum:
          - MENSAL
          - BIMESTRAL
          - TRIMESTRAL
    SellerPage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          example: 1
          items:
            $ref: '#/components/schemas/SellerRest'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    SellerTransactionPage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          example: 1
          items:
            $ref: '#/components/schemas/SellerTransactionRest'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    RulePage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          example: 1
          items:
            $ref: '#/components/schemas/RuleRest'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    FeePage:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Response return code.
          format: int32
          example: 0
        mensagem:
          type: string
          description: Response message.
          example: Success
        conteudo:
          type: array
          description: Response Content.
          example: 1
          items:
            $ref: '#/components/schemas/FeeRest'
        lastPage:
          type: boolean
          description: Is the last page for paginated results.
          example: true
        totalPages:
          type: integer
          description: Total pages.
          format: int32
          example: 5
        totalItems:
          type: integer
          description: Total items queried.
          format: int64
          example: 1
        currentPage:
          type: integer
          description: Current page in request.
          format: int32
          example: 1
        totalCurrentItems:
          type: integer
          description: Total items for current request.
          format: int32
          example: 1
    GitRespDTO:
      type: object
      properties:
        apiName:
          type: string
          description: API name
          example: apiName-api
        commit:
          type: string
          description: Commit ID
          example: 4559b58
        branch:
          type: string
          description: Branch name
          example: uat
        buildTime:
          type: string
          description: Build date and time
          example: 11/02/2021 16:24
        buildVersion:
          type: string
          description: "Id generated by the Jenkin build, AutoCM or others"
          example: "1"
        requestTime:
          type: string
          description: Request date and time
          example: Consulta realizada em 30/03/2021 17:10:55
      description: Return with method information
    IsAlive:
      type: object
      properties:
        codigoRetorno:
          type: integer
          description: Return code
          format: int32
          example: 0
        mensagem:
          type: string
          description: Description return code
          example: Sucesso.
        conteudo:
          $ref: '#/components/schemas/GitRespDTO'
  securitySchemes:
    JWT:
      type: apiKey
      name: Authorization
      in: header
